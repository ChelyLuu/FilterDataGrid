<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IsTrue" xml:space="preserve">
    <value>네</value>
  </data>
  <data name="IsFalse" xml:space="preserve">
    <value>아니요</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>간격 조정</value>
  </data>
  <data name="SearchWord" xml:space="preserve">
    <value>검색할 키워드를 입력하세요</value>
  </data>
  <data name="ClearFilter" xml:space="preserve">
    <value>필터를 지우세요</value>
  </data>
  <data name="Contains" xml:space="preserve">
    <value>검색 (포함)</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>전체선택</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>취소</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="AscSort" xml:space="preserve">
    <value>오름차순으로 정렬</value>
  </data>
  <data name="DescSort" xml:space="preserve">
    <value>내림차순으로 정렬</value>
  </data>
  <data name="ClearSort" xml:space="preserve">
    <value>정렬 지우기</value>
  </data>
  <data name="ClearAllSort" xml:space="preserve">
    <value>모든 정렬을 지웁니다</value>
  </data>
  <data name="CustomFilter" xml:space="preserve">
    <value>사용자 지정 필터</value>
  </data>
  <data name="ClearCurrentFilter" xml:space="preserve">
    <value>전류 필터를 지우세요</value>
  </data>
  <data name="ClearAllFilter" xml:space="preserve">
    <value>모든 필터를 지우세요</value>
  </data>
  <data name="GroupColumn" xml:space="preserve">
    <value>이 열은 그룹화되어 있습니다</value>
  </data>
  <data name="CancelGroup" xml:space="preserve">
    <value>그룹 해제</value>
  </data>
  <data name="SearchPanel" xml:space="preserve">
    <value>검색 패널</value>
  </data>
  <data name="InterfaceSettings" xml:space="preserve">
    <value>인터페이스 설정</value>
  </data>
  <data name="CloseSearchPanel" xml:space="preserve">
    <value>검색 패널을 닫으세요</value>
  </data>
  <data name="ItemsInPage" xml:space="preserve">
    <value>페이지당 표시할 번호</value>
  </data>
  <data name="PrevPage" xml:space="preserve">
    <value>이전</value>
  </data>
  <data name="GoToPage" xml:space="preserve">
    <value>뛰어</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>다음</value>
  </data>
  <data name="EndPage" xml:space="preserve">
    <value>마지막입니다</value>
  </data>
  <data name="LayoutName" xml:space="preserve">
    <value>파일 이름 설정</value>
  </data>
  <data name="RowHeightAdjust" xml:space="preserve">
    <value>라인 높이 조정</value>
  </data>
  <data name="RowHeaderWidthAdjust" xml:space="preserve">
    <value>라인 헤더 조정</value>
  </data>
  <data name="GroupHeightAdjust" xml:space="preserve">
    <value>그룹화된 행 높이</value>
  </data>
  <data name="ColumnSelect" xml:space="preserve">
    <value>열 이름 선택</value>
  </data>
  <data name="ShowHideColumn" xml:space="preserve">
    <value>열 표시/숨기기</value>
  </data>
  <data name="ColumnWidthAdjust" xml:space="preserve">
    <value>열 너비 조정</value>
  </data>
  <data name="Alignment" xml:space="preserve">
    <value>정렬</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>(*설정됨)</value>
  </data>
  <data name="LeftAlign" xml:space="preserve">
    <value>왼쪽</value>
  </data>
  <data name="CenterAlign" xml:space="preserve">
    <value>센터</value>
  </data>
  <data name="RightAlign" xml:space="preserve">
    <value>오른쪽으로 정렬하세요</value>
  </data>
  <data name="OtherSetting" xml:space="preserve">
    <value>기타 설정</value>
  </data>
  <data name="ShowCenter" xml:space="preserve">
    <value>가운데 모두 표시</value>
  </data>
  <data name="InterlacedColor" xml:space="preserve">
    <value>인터레이스 색상 변경</value>
  </data>
  <data name="SaveLayout" xml:space="preserve">
    <value>레이아웃을 저장하세요</value>
  </data>
  <data name="ResetLayout" xml:space="preserve">
    <value>레이아웃을 재설정하세요</value>
  </data>
  <data name="TitleBarAdjust" xml:space="preserve">
    <value>제목 표시줄 조정</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>홈페이지</value>
  </data>
  <data name="ShowGlobalSearch" xml:space="preserve">
    <value>기본적으로 전역 검색 표시</value>
  </data>
  <data name="SaveCompleted" xml:space="preserve">
    <value>저장되었습니다!</value>
  </data>
  <data name="ResetCompleted" xml:space="preserve">
    <value>초기화 완료!</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>나의정보 닫기</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>위</value>
  </data>
  <data name="ShowVerticalGridLine" xml:space="preserve">
    <value>세로 눈금선 표시</value>
  </data>
  <data name="ExpandedAllGroup" xml:space="preserve">
    <value>모두 확장</value>
  </data>
  <data name="CollapsedAllGroup" xml:space="preserve">
    <value>모두 무너졌습니다</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>그리고</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>또는</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>과 같다</value>
  </data>
  <data name="UnEqual" xml:space="preserve">
    <value>아니다</value>
  </data>
  <data name="Contain" xml:space="preserve">
    <value>포함하다</value>
  </data>
  <data name="UnContain" xml:space="preserve">
    <value>포함하지 않는</value>
  </data>
  <data name="StartWith" xml:space="preserve">
    <value>다음으로 시작</value>
  </data>
  <data name="EndWith" xml:space="preserve">
    <value>엔딩</value>
  </data>
  <data name="Null" xml:space="preserve">
    <value>비어 있음</value>
  </data>
  <data name="UnNull" xml:space="preserve">
    <value>비어 있지 않습니다</value>
  </data>
  <data name="Greater" xml:space="preserve">
    <value>보다 큽니다</value>
  </data>
  <data name="GreaterEqual" xml:space="preserve">
    <value>크거나 같음</value>
  </data>
  <data name="Less" xml:space="preserve">
    <value>미만</value>
  </data>
  <data name="LessEqual" xml:space="preserve">
    <value>이하</value>
  </data>
  <data name="AddCondition" xml:space="preserve">
    <value>조건을 추가하세요</value>
  </data>
  <data name="DeleteCondition" xml:space="preserve">
    <value>조건을 제거하십시오</value>
  </data>
  <data name="ClearCondition" xml:space="preserve">
    <value>조건을 지우세요</value>
  </data>
  <data name="ApplyFilter" xml:space="preserve">
    <value>필터를 적용하세요</value>
  </data>
  <data name="CustomizeFilterTip" xml:space="preserve">
    <value>필터 조건을 완벽하게 해주세요!</value>
  </data>
  <data name="ExportTip" xml:space="preserve">
    <value>이번에는 총 [{0}] 개의 데이터를 내보냈습니다.</value>
  </data>
  <data name="Sum" xml:space="preserve">
    <value>합계:</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>모음집:</value>
  </data>
</root>